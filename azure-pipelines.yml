trigger:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  acrName: 'libreborrcontainers'  # Zameni sa imenom svog ACR-a
  apiImage1: 'libreborr-web'
  apiImage2: 'libreborr-fetchbookapi'
  imageTag: '$(Build.BuildId)'  # Jedinstveni tag za svaku izgradnju

steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '9.x'
      includePreviewVersions: true

  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      arguments: '--configuration $(buildConfiguration)'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'test'
      arguments: '--configuration $(buildConfiguration) --no-build'
      projects: '**/*.csproj'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'drop'

  # Docker login to ACR
  - task: Docker@2
    inputs:
      command: 'login'
      containerRegistry: '$(acrName).azurecr.io'
      azureSubscription: '<IME_AZURE_SUBSCRIPTION>'  # Zameni sa nazivom svoje Azure pretplate

  # Build and push API 1 Docker image
  - task: Docker@2
    inputs:
      command: 'buildAndPush'
      repository: '$(acrName).azurecr.io/$(apiImage1)'
      tags: '$(imageTag)'
      dockerfile: 'LibreBorr.Web/Dockerfile'  # Putanja do Dockerfile-a za prvi API
      containerRegistry: '$(acrName).azurecr.io'

  # Build and push API 2 Docker image
  - task: Docker@2
    inputs:
      command: 'buildAndPush'
      repository: '$(acrName).azurecr.io/$(apiImage2)'
      tags: '$(imageTag)'
      dockerfile: 'LibreBorr.FetchBookApi/Dockerfile'  # Putanja do Dockerfile-a za drugi API
      containerRegistry: '$(acrName).azurecr.io'
