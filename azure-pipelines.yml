trigger:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  system.debug: true
  buildConfiguration: 'Release'
  acrName: 'libreborrcontainers'
  apiImage1: 'libreborr-web'
  apiImage2: 'libreborr-fetchbookapi'
  imageTag: '$(Build.BuildId)'
  dockerRegistryServiceConnection: 'libreborrcontainers.azurecr.io'

steps:
  - checkout: self
    persistCredentials: true
    clean: true

  # Update Docker to the latest version
  - script: |
      sudo apt-get update
      sudo apt-get install -y docker-ce docker-ce-cli containerd.io
    displayName: 'Update Docker to Latest Version'

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '9.x'
      includePreviewVersions: true

  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
      arguments: '--no-cache'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      arguments: '--configuration $(buildConfiguration)'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'test'
      arguments: '--configuration $(buildConfiguration) --no-build'
      projects: '**/*.csproj'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'drop'

  # List all files in the build context for debugging
  - script: |
      echo "Listing all files in the build context:"
      find $(Build.SourcesDirectory)
    displayName: 'List All Files in Build Context'

  # Docker login to ACR
  - task: Docker@2
    inputs:
      command: 'login'
      containerRegistry: '$(acrName).azurecr.io'
      azureSubscription: 'libreborrcontainers'

  # Disable BuildKit and build Docker image for API 1
  - script: |
      export DOCKER_BUILDKIT=0

  - task: Docker@2
    displayName: 'Build and Push LibreBorr.Web Docker image to ACR'
    inputs:
      command: 'buildAndPush'
      repository: '$(acrName).azurecr.io/$(apiImage1)' 
      dockerfile: '$(Build.SourcesDirectory)/LibreBorr.Web/Dockerfile'
      buildContext: '$(Build.SourcesDirectory)'
      tags: '$(imageTag)'
      containerRegistry: '$(dockerRegistryServiceConnection)'  

  - task: Docker@2
    displayName: 'Build and Push LibreBorr.FetchBookApi Docker image to ACR'
    inputs:
      command: 'buildAndPush'
      repository: '$(acrName).azurecr.io/$(apiImage2)'  
      dockerfile: '$(Build.SourcesDirectory)/LibreBorr.FetchBookApi/Dockerfile'
      buildContext: '$(Build.SourcesDirectory)'
      tags: '$(imageTag)'
      containerRegistry: '$(dockerRegistryServiceConnection)'  

